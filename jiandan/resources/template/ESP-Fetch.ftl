package ${pkg}.generated.fetch;

import com.ibm.esp.objects.generated.fetch.AccessControlFetch;
import com.ibm.esp.objects.generated.fetch.UserGroupAccessControlListFetch;
import com.ibm.esp.objects.interfaces.ESPFetch;
import org.codehaus.jackson.map.annotate.JsonSerialize;
import org.codehaus.jackson.map.annotate.JsonSerialize.Inclusion;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;

/**
 * Generated by Jiandan
 */
@JsonSerialize(include = Inclusion.NON_NULL)
@Component
@Scope("prototype")
public class ${shortName}Fetch implements ESPFetch {

	<#list fields as field>
    private ${field.type} ${field.name} <#if field.defaultValue??> = ${field.defaultValue} </#if>;
    
    public ${field.type} ${field.getter}() {
    	return this.${field.name};
    }
    
    public void ${field.setter}(${field.type} ${field.name}) {
    	this.${field.name} = ${field.name};
    }
    </#list>
    
    
    
    private Boolean code = true;

    private Boolean permission = true;

    private Boolean description = true;

    private UserGroupAccessControlListFetch userGroupACL;

    public Boolean getId() {
        return this.id;
    }

    public void setId(Boolean id) {
        this.id = id;
    }

    public Boolean getCode() {
        return this.code;
    }

    public void setCode(Boolean code) {
        this.code = code;
    }

    public Boolean getPermission() {
        return this.permission;
    }

    public void setPermission(Boolean permission) {
        this.permission = permission;
    }

    public Boolean getDescription() {
        return this.description;
    }

    public void setDescription(Boolean description) {
        this.description = description;
    }

    public UserGroupAccessControlListFetch getUserGroupACL() {
        return this.userGroupACL;
    }

    public void setUserGroupACL(UserGroupAccessControlListFetch userGroupACL) {
        this.userGroupACL = userGroupACL;
    }

    public UserGroupAccessControlListFetch addUserGroupACL() {
        if(getUserGroupACL() != null){
        	return getUserGroupACL();
        } else {
        	UserGroupAccessControlListFetch field = new UserGroupAccessControlListFetch();
        	setUserGroupACL(field);
        	return field;
        }
    }

    public AccessControlFetch clear() {
        setId(false);
        setCode(false);
        setPermission(false);
        setDescription(false);
        setUserGroupACL(null);
        return this;

    }

}